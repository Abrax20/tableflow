{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.ts"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { TableFlowImporterProps } from \"./types/index\";\r\nimport \"./index.css\";\r\n\r\nexport default function TableFlowImporter({\r\n  // TODO: Include \"as\" parameter to launch as a div\r\n  elementId = \"tableflow-importer\",\r\n  isOpen = true,\r\n  onRequestClose = () => null,\r\n  importerId,\r\n  hostUrl,\r\n  darkMode = false,\r\n  primaryColor = \"#7a5ef8\",\r\n  metadata = \"{}\",\r\n  closeOnClickOutside,\r\n  className,\r\n  ...props\r\n}: TableFlowImporterProps) {\r\n  const current = document.getElementById(elementId) as HTMLDialogElement;\r\n\r\n  // useEffect(() => {\r\n  if (current) {\r\n    if (isOpen) current.showModal();\r\n    else current.close();\r\n  }\r\n  //}, [isOpen, current]);\r\n\r\n  const baseClass = \"TableFlowImporter\";\r\n  const themeClass = darkMode && `${baseClass}-dark`;\r\n  const dialogClass = [`${baseClass}-dialog`, themeClass, className]\r\n    .filter((i) => i)\r\n    .join(\" \");\r\n  const closeClass = `${baseClass}-close`;\r\n\r\n  const urlParams = {\r\n    importerId,\r\n    darkMode: darkMode.toString(),\r\n    primaryColor,\r\n    metadata,\r\n    isOpen: isOpen.toString(),\r\n  };\r\n  const searchParams = new URLSearchParams(urlParams);\r\n  const defaultImporterUrl = \"https://importer.tableflow.com\";\r\n  const uploaderUrl = `${\r\n    hostUrl ? hostUrl : defaultImporterUrl\r\n  }?${searchParams}`;\r\n  const backdropClick = (e: any) => closeOnClickOutside && onRequestClose();\r\n\r\n  //useEffect(() => {\r\n  try {\r\n    JSON.parse(metadata);\r\n  } catch (e) {\r\n    console.error(\r\n      'The \"metadata\" prop is not a valid JSON string. Please check the documentation for more details.'\r\n    );\r\n  }\r\n  //}, [metadata]);\r\n\r\n  //useEffect(() => {\r\n  window.onmessage = function (e) {\r\n    if (e.data == \"close\") {\r\n      onRequestClose();\r\n    }\r\n  };\r\n  //}, []);\r\n\r\n  return `<dialog ref={ref} className={dialogClass} onClick={backdropClick} {...props}>\r\n            <iframe src={uploaderUrl} />\r\n            <button className={closeClass} onClick={() => onRequestClose()}>\r\n                <span dangerouslySetInnerHTML={{ __html: cross }} />\r\n            </button>\r\n        </dialog>`;\r\n}\r\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}